# -*- mode: ruby -*-
# vi: set ft=ruby :


Vagrant.configure("2") do |config|

  config.vm.box = "mrlesmithjr/windows2016"
  config.vm.box_version = "1543402017"

  config.vm.network :private_network, ip: "192.168.58.64"
  config.vm.communicator = "winrm"
  config.winrm.retry_limit = 30
  config.winrm.retry_delay = 10
  

  config.vm.synced_folder "./", "/vagrant_data", automount: true

  config.vm.provider "virtualbox" do |vb|
    vb.memory = "4120"
    vb.gui = "true"
  end

  #first shell script installs choco pckage manager and nuget package provider
  config.vm.provision "shell", path: "./scripts/bootstrap.ps1"

  #second shell script compiles and applies the dsc configuration script to the host.
  #we definte the username\passwords in the vagrantfile so they can be abstracted from the config scripts.

  $script = <<-SCRIPT

  #here we create a credential object that we'll pass to the DSC configuration
  $serviceAccountUser = 'vagrant'
  $serviceAccountPass = 'vagrant'
  $PsDscRunAsCredentialPass = $serviceAccountPass | ConvertTo-SecureString -AsPlainText -Force
  $SA_DSCRunAsCred = New-Object System.Management.Automation.PSCredential($serviceAccountUser, $PsDscRunAsCredentialPass)
 
 #generate .mof and appy configuration when this script executed by the vagrant shell provisioner
 

 #we 'dotsource' the config and pass in the credential object and config data. Then we create the .mof files containing the server config.
 . C:\\vagrant_data\\Scripts\\Config.ps1
 VibServer -SA_DSCRunAsCred $SA_DSCRunAsCred -ConfigurationData $configdata -outPutPath C:\\build\\VibServer


#here we apply the configuration to the server.
 Set-DscLocalConfigurationManager -path  C:\\build\\VibServer -verbose
 Start-DscConfiguration -path C:\\build\\VibServer -wait -verbose -force 
  SCRIPT


  config.vm.provision "shell", inline: $script




end
